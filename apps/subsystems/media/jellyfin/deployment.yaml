---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jellyfin
  namespace: media
  labels:
    app.kubernetes.io/name: jellyfin
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: jellyfin
  template:
    metadata:
      labels:
        app.kubernetes.io/name: jellyfin
    spec:
      automountServiceAccountToken: false
      initContainers:
      - name: volume-permissions
        image: busybox@sha256:f85340bf132ae937d2c2a763b8335c9bab35d6e8293f70f606b9c6178d84f42b
        command:
        - "/bin/sh"
        - "-c"
        - "chown 1000:1000 /config && chown 1000:1000 /cache && chown 1000:1000 /config/log"
        securityContext:
          allowPrivilegeEscalation: true
          capabilities:
            add:
            - CHOWN
            drop:
            - ALL
          runAsNonRoot: false
          runAsUser: 0
          runAsGroup: 0
        volumeMounts:
        - mountPath: /config
          name: jellyfin-data
        - mountPath: /cache
          name: jellyfin-cache
        - mountPath: "/config/log"
          name: jellyfin-logs
      containers:
      - name: jellyfin
        env:
        - name: PublishedServerUrl
          value: ${jellyfin_external_ip_address}
        image: ghcr.io/jellyfin/jellyfin:10.10.7@sha256:e4d1dc5374344446a3a78e43dd211247f22afba84ea2e5a13cbe1a94e1ff2141
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /health
            port: 8096
        ports:
        - name: jellyfin
          containerPort: 8096
          protocol: TCP
        - name: auto-discovery
          containerPort: 7359
          protocol: UDP
        readinessProbe:
          httpGet:
            path: /health
            port: 8096
        resources:
          requests:
            gpu.intel.com/i915: 1
            cpu: 500m
            memory: 2048Mi
          limits:
            gpu.intel.com/i915: 1
            memory: 8192Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - "ALL"
          readOnlyRootFilesystem: true
        startupProbe:
          httpGet:
            path: /health
            port: 8096
          initialDelaySeconds: 15
        volumeMounts:
        - mountPath: /config
          name: jellyfin-data
        - mountPath: /cache
          name: jellyfin-cache
        - mountPath: /data
          name: jellyfin-media
          readOnly: true
        - mountPath: "/config/log"
          name: jellyfin-logs
        - mountPath: /tmp
          name: jellyfin-temp
      nodeSelector:
        intel.feature.node.kubernetes.io/gpu: "true"
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        # use a kustomize overlay to update w/
        # - MEDIA_READER_GID (i.e. group w/ read access to jellyfin-media volume)
        # - TRANSCODER_DEV_GIDS (i.e. groups w/ access to /dev/dri/*)
        supplementalGroups: []
      volumes:
      - name: jellyfin-data
        persistentVolumeClaim:
          claimName: jellyfin-data
      - name: jellyfin-cache
        emptyDir: {}
      - name: jellyfin-media
        persistentVolumeClaim:
          claimName: media-read-only
      - name: jellyfin-logs
        hostPath:
          path: /var/log/jellyfin
          type: DirectoryOrCreate
      - name: jellyfin-temp
        emptyDir: {}
