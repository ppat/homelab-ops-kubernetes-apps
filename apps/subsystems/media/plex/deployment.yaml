---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: plex
  namespace: media
  labels:
    app.kubernetes.io/name: plex
  annotations:
    secret.reloader.stakater.com/reload: "plex-secrets"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: plex
  template:
    metadata:
      labels:
        app.kubernetes.io/name: plex
    spec:
      automountServiceAccountToken: false
      initContainers:
      - name: log-janitor
        image: busybox@sha256:f9a104fddb33220ec80fc45a4e606c74aadf1ef7a3832eb0b05be9e90cd61f5f
        env:
        - name: LOG_PATH
          value: "/var/log/plex"
        - name: LOG_APP
          value: "Plex"
        command:
        - "/bin/sh"
        - "-c"
        # yamllint disable-line rule:indentation
        - |
          # This script runs in a loop and clean up logs older than 1 day as log
          # ingestor is expected to have scraped them by then.
          while true; do
            echo "Running $LOG_APP log cleanup...";
            while IFS= read -r -d '' file; do
              echo "$file";
              rm -f "$file";
            done < <(find "$LOG_PATH" -path "*/lost+found" -prune -o -mtime +1 -type f -name '*.log*' -print0);
            echo;
            echo "Sleeping for 4 hrs...";
            sleep 14400;
            echo;
          done
        restartPolicy: Always
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: "/var/log/plex"
          name: plex-logs
      containers:
      - name: plex
        command:
        - /scripts/entrypoint.sh
        env:
        - name: ADVERTISE_IP
          value: "http://${plex_external_ip_address}:32400"
        envFrom:
        - secretRef:
            name: plex-secrets
            optional: true
        image: plexinc/pms-docker:1.41.9.9961-46083195d@sha256:498445d9d65499916a4da7941279cc58d751f4196a159c75b4d2c1b5c664660a
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /identity
            port: 32400
        ports:
        - name: plex
          containerPort: 32400
          protocol: TCP
        - name: gdm-discovery1
          containerPort: 32410
          protocol: UDP
        - name: gdm-discovery2
          containerPort: 32412
          protocol: UDP
        - name: gdm-discovery3
          containerPort: 32413
          protocol: UDP
        - name: gdm-discovery4
          containerPort: 32414
          protocol: UDP
        readinessProbe:
          httpGet:
            path: /identity
            port: 32400
        resources:
          requests:
            gpu.intel.com/i915: 1
            cpu: 500m
            memory: 2048Mi
          limits:
            gpu.intel.com/i915: 1
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - "ALL"
          readOnlyRootFilesystem: true
        startupProbe:
          httpGet:
            path: /identity
            port: 32400
          initialDelaySeconds: 15
        volumeMounts:
        - mountPath: /config
          name: plex-data
        - mountPath: /transcode
          name: plex-transcode
        - mountPath: /data
          name: plex-media
          readOnly: true
        - mountPath: "/var/log/plex"
          name: plex-logs
        - mountPath: /scripts
          name: plex-scripts
        - mountPath: /tmp
          name: plex-temp
      nodeSelector:
        intel.feature.node.kubernetes.io/gpu: "true"
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        # fsGroup is intentionally unset to prevent changing permissions on plex-media volume
        # use a kustomize overlay to update w/
        # - MEDIA_READER_GID (i.e. group w/ read access to plex-media volume)
        # - TRANSCODER_DEV_GIDS (i.e. groups w/ access to /dev/dri/*)
        supplementalGroups: []
      volumes:
      - name: plex-data
        persistentVolumeClaim:
          claimName: plex-data
      - name: plex-transcode
        emptyDir:
          sizeLimit: ${plex_transcode_size:=10Gi}
      - name: plex-media
        persistentVolumeClaim:
          claimName: media-read-only
      - name: plex-logs
        # plex writes logs to multiple different log files:
        #     'PMS Plugin Logs/*.log'
        #     'Plex Crash Uploader.log'
        #     'Plex Media Server.log'
        #     'Plex Tuner Service.log'
        # these are not written to stdout, so we are placing them on a separate pvc that
        # can be scraped by the log ingestor
        persistentVolumeClaim:
          claimName: plex-logs
      - name: plex-scripts
        configMap:
          name: plex-scripts
          defaultMode: 0755
      - name: plex-temp
        emptyDir:
          sizeLimit: 256Mi
