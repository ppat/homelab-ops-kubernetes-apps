server:
    ###########################################################################
    # BASIC SETTINGS
    ###########################################################################

    # Listen for queries on this network interface and port.
    interface: 0.0.0.0@53

    do-ip4: yes
    do-ip6: no
    do-udp: yes
    do-tcp: yes
    prefer-ip4: yes
    prefer-ip6: no

    # Use systemd socket activation for UDP, TCP, and control sockets.
    use-systemd: no

    # Detach from the terminal, run in background, "yes" or "no".
    # Set the value to "no" when Unbound runs as systemd service.
    do-daemonize: no

    # if given, user privileges are dropped (after binding port),
    # and the given username is assumed. Default is user "unbound".
    # If you give "" no privileges are dropped.
    username: ""

    # the working directory. The relative files in this config are
    # relative to this directory. If you give "" the working directory
    # is not changed.
    # If you give a server: directory: dir before include: file statements
    # then those includes can be relative to the working directory.
    directory: "/usr/local/unbound/"

    # if given, a chroot(2) is done to the given directory.
    # i.e. you can chroot to the working directory, for example,
    # for extra security, but make sure all files are in that directory.
    #
    # If chroot is enabled, you should pass the configfile (from the
    # commandline) as a full path from the original root. After the
    # chroot has been performed the now defunct portion of the config
    # file path is removed to be able to reread the config after a reload.
    #
    # All other file paths (working dir, logfile, roothints, and
    # key files) can be specified in several ways:
    # 	o as an absolute path relative to the new root.
    # 	o as a relative path to the working directory.
    # 	o as an absolute path relative to the original root.
    # In the last case the path is adjusted to remove the unused portion.
    #
    # The pid file can be absolute and outside of the chroot, it is
    # written just prior to performing the chroot and dropping permissions.
    #
    # Additionally, Unbound may need to access /dev/urandom (for entropy).
    # How to do this is specific to your OS.
    #
    # If you give "" no chroot is performed. The path must not end in a /.
    chroot: ""

    # the pid file. Can be an absolute path outside of chroot/work dir.
    pidfile: "/usr/local/unbound/unbound.d/unbound.pid"

    # module configuration of the server. A string with identifiers
    # separated by spaces. Syntax: "[dns64] [validator] iterator"
    # most modules have to be listed at the beginning of the line,
    # except cachedb(just before iterator), and python (at the beginning,
    # or, just before the iterator).
    module-config: "validator iterator"

    # If you want to perform DNSSEC validation, run unbound-anchor before
    # you start Unbound (i.e. in the system boot scripts).
    # And then enable the auto-trust-anchor-file config item.
    # Please note usage of unbound-anchor root anchor is at your own risk
    # and under the terms of our LICENSE (see that file in the source).
    auto-trust-anchor-file: "/usr/local/unbound/iana.d/root.key"

    # trust anchor signaling sends a RFC8145 key tag query after priming.
    trust-anchor-signaling: yes

    # Use this certificate bundle for authenticating connections made to
    # outside peers (e.g., auth-zone urls, DNS over TLS connections).
    tls-cert-bundle: /etc/ssl/certs/ca-certificates.crt

    # file to read root hints from.
    # get one from https://www.internic.net/domain/named.cache
    # root-hints: ""
    # root-hints: "/usr/local/unbound/iana.d/root.hints"

    ###########################################################################
    # LOGGING
    ###########################################################################

    # the log file, "" means log to stderr.
    # Use of this option sets use-syslog to "no".
    logfile: ""

    # log the local-zone actions, like local-zone type inform is enabled also for the other local zone types.
    log-local-actions: yes

    # print one line with time, IP, name, type, class for every query.
    log-queries: yes

    # print one line per reply, with time, IP, name, type, class, rcode, timetoresolve, fromcache and responsesize.
    log-replies: yes

    # print log lines that say why queries return SERVFAIL to clients.
    log-servfail: yes

    # print UTC timestamp in ascii to logfile, default is epoch in seconds.
    log-time-ascii: yes

    # Log to syslog(3) if yes. The log facility LOG_DAEMON is used to
    # log to. If yes, it overrides the logfile.
    use-syslog: no

    # Have the validator log failed validations for your diagnosis.
    # 0: off. 1: A line per failed user query. 2: With reason and bad IP.
    val-log-level: 2

    # Set logging level
    # Level 0: No verbosity, only errors.
    # Level 1: Gives operational information.
    # Level 2: Gives detailed operational information including short information per query.
    # Level 3: Gives query level information, output per query.
    # Level 4: Gives algorithm level information.
    # Level 5: Logs client identification for cache misses.
    verbosity: 2

    ###########################################################################
    # PRIVACY SETTINGS
    ###########################################################################

    # RFC 8198. Use the DNSSEC NSEC chain to synthesize NXDO-MAIN and other
    # denials, using information from previous NXDO-MAINs answers. In other
    # words, use cached NSEC records to generate negative answers within a
    # range and positive answers from wildcards. This increases performance,
    # decreases latency and resource utilization on both authoritative and
    # recursive servers, and increases privacy. Also, it may help increase
    # resilience to certain DoS attacks in some circumstances.
    aggressive-nsec: yes

    # Do not query the following addresses. No DNS queries are sent there.
    # List one address per entry. List classless netblocks with /size,
    do-not-query-address: 127.0.0.1/8
    do-not-query-address: ::1

    # if yes, the above default do-not-query-address entries are present.
    # if no, localhost can be queried (for testing and debugging).
    do-not-query-localhost: yes

    # The insecure-lan-zones option disables validation for
    # these zones, as if they were all listed as domain-insecure.
    insecure-lan-zones: yes

    # Enforce privacy of these addresses. Strips them away from answers.
    # It may cause DNSSEC validation to additionally mark it as bogus.
    # Protects against 'DNS Rebinding' (uses browser as network proxy).
    # Only 'private-domain' and 'local-data' names are allowed to have
    # these private addresses. No default.
    private-address: 10.0.0.0/8
    private-address: 172.16.0.0/12
    private-address: 192.168.0.0/16
    private-address: 169.254.0.0/16
    private-address: fd00::/8
    private-address: fe80::/10
    private-address: ::ffff:0:0/96

    # Sent minimum amount of information to upstream servers to enhance
    # privacy. Only sent minimum required labels of the QNAME and set QTYPE
    # to A when possible.
    qname-minimisation: yes

    # QNAME minimisation in strict mode. Do not fall-back to sending full
    # QNAME to potentially broken nameservers. A lot of domains will not be
    # resolvable when this option in enabled.
    # This option only has effect when qname-minimisation is enabled.
    # qname-minimisation-strict: no

    # If Unbound is running service for the local host then it is useful
    # to perform lan-wide lookups to the upstream, and unblock the
    # long list of local-zones above.  If this Unbound is a dns server
    # for a network of computers, disabled is better and stops information
    # leakage of local lan information.
    unblock-lan-zones: no

    ###########################################################################
    # STATISTICS SETTINGS
    ###########################################################################
    # print statistics to the log (for every thread) every N seconds.
    # Set to "" or 0 to disable. Default is disabled.
    # statistics-interval: 0

    # enable shm for stats, default no.  if you enable also enable
    # statistics-interval, every time it also writes stats to the
    # shared memory segment keyed with shm-key.
    # shm-enable: no

    # shm for stats uses this key, and key+1 for the shared mem segment.
    # shm-key: 11777

    # enable cumulative statistics, without clearing them after printing.
    # statistics-cumulative: no

    # enable extended statistics (query types, answer codes, status)
    # printed from unbound-control. Default off, because of speed.
    # extended-statistics: no

    # Inhibits selected extended statistics (qtype, qclass, qopcode, rcode,
    # rpz-actions) from printing if their value is 0.
    # Default on.
    # statistics-inhibit-zero: yes

    ###########################################################################
    # SECURITY SETTINGS
    ###########################################################################
    # Only give access to recursion clients from LAN IPs
    access-control: 127.0.0.1/32 allow
    access-control: 192.168.0.0/16 allow
    access-control: 172.16.0.0/12 allow
    access-control: 10.0.0.0/8 allow
    # access-control: fc00::/7 allow
    # access-control: ::1/128 allow

    # Deny queries of type ANY with an empty response.
    deny-any: yes

    # true to disable DNSSEC lameness check in iterator.
    disable-dnssec-lame-check: no

    # Harden against algorithm downgrade when multiple algorithms are
    # advertised in the DS record.
    harden-algo-downgrade: yes

    # RFC 8020. returns nxdomain to queries for a name below another name that
    # is already known to be nxdomain.
    harden-below-nxdomain: yes

    # Require DNSSEC data for trust-anchored zones, if such data is absent, the
    # zone becomes bogus. If turned off you run the risk of a downgrade attack
    # that disables security for a zone.
    harden-dnssec-stripped: yes

    # Harden against out of zone rrsets, to avoid spoofing attempts.
    harden-glue: yes

    # Ignore unseemly large queries.
    harden-large-queries: yes

    # Perform additional queries for infrastructure data to harden the referral
    # path. Validates the replies if trust anchors are configured and the zones
    # are signed. This enforces DNSSEC validation on nameserver NS sets and the
    # nameserver addresses that are encountered on the referral path to the
    # answer. Experimental option.
    harden-referral-path: yes

    # Ignore very small EDNS buffer sizes from queries.
    harden-short-bufsize: yes

    # If enabled the HTTP header User-Agent is not set. Use with caution
    # as some webserver configurations may reject HTTP requests lacking
    # this header. If needed, it is better to explicitly set the
    # the http-user-agent.
    hide-http-user-agent: no

    # Refuse id.server and hostname.bind queries
    hide-identity: yes

    # enable to not answer trustanchor.unbound queries.
    hide-trustanchor: yes

    # Set the HTTP User-Agent header for outgoing HTTP requests. If
    # set to "", the default, then the package name and version are
    # used.
    http-user-agent: "DNS"

    # Refuse version.server and version.bind queries
    hide-version: yes

    # Report this identity rather than the hostname of the server.
    identity: "DNS"

    # ratelimit for uncached, new queries, this limits recursion effort.
    # ratelimiting is experimental, and may help against random query flood,
    # but not spoofed reflection floods.
    # if 0(default) it is disabled, otherwise state qps allowed per zone.
    # ratelimit: 0

    # Root key trust anchor sentinel (draft-ietf-dnsop-kskroll-sentinel)
    root-key-sentinel: yes

    # Set the total number of unwanted replies to keep track of in every thread.
    # When it reaches the threshold, a defensive action of clearing the rrset
    # and message caches is taken, hopefully flushing away any poison.
    # Unbound suggests a value of 10 million.
    unwanted-reply-threshold: 10000

    # Use 0x20-encoded random bits in the query to foil spoof attempts. This
    # perturbs the lowercase and uppercase of query names sent to authority
    # servers and checks if the reply still has the correct casing.
    # This feature is an experimental implementation of draft dns-0x20.
    # Experimental option.
    use-caps-for-id: yes

    # Help protect users that rely on this validator for authentication from
    # potentially bad data in the additional section. Instruct the validator to
    # remove data from the additional section of secure messages that are not
    # signed properly. Messages that are insecure, bogus, indeterminate or
    # unchecked are not affected.
    val-clean-additional: yes

    ###########################################################################
    # PERFORMANCE SETTINGS
    ###########################################################################
    # https://nlnetlabs.nl/documentation/unbound/howto-optimise/
    # https://nlnetlabs.nl/news/2019/Feb/05/unbound-1.9.0-released/

    # Time to live maximum for RRsets and messages in the cache. If the maximum
    # kicks in, responses to clients still get decrementing TTLs based on the
    # original (larger) values. When the internal TTL expires, the cache item
    # has expired. Can be set lower to force the resolver to query for data
    # often, and not trust (very large) TTL values.
    cache-max-ttl: 86400

    # Time to live minimum for RRsets and messages in the cache. If the minimum
    # kicks in, the data is cached for longer than the domain owner intended,
    # and thus less queries are made to look up the data. Zero makes sure the
    # data in the cache is as the domain owner intended, higher values,
    # especially more than an hour or so, can lead to trouble as the data in
    # the cache does not match up with the actual data any more.
    cache-min-ttl: 300

    # Extra delay for timeouted UDP ports before they are closed, in msec.
    # This prevents very delayed answer packets from the upstream (recursive)
    # servers from bouncing against closed ports and setting off all sort of
    # close-port counters, with eg. 1500 msec. When timeouts happen you need
    # extra sockets, it checks the ID and remote IP of packets, and unwanted
    # packets are added to the unwanted packet counter.
    delay-close: 10000

    # RFC 6891. Number  of bytes size to advertise as the EDNS reassembly buffer
    # size. This is the value put into  datagrams over UDP towards peers.
    # The actual buffer size is determined by msg-buffer-size (both for TCP and
    # UDP). Do not set higher than that value.
    # Default  is  1232 which is the DNS Flag Day 2020 recommendation.
    # Setting to 512 bypasses even the most stringent path MTU problems, but
    # is seen as extreme, since the amount of TCP fallback generated is
    # excessive (probably also for this resolver, consider tuning the outgoing
    # tcp number).
    edns-buffer-size: 1232

    # the number of slabs to use for the Infrastructure cache. the number of
    # slabs must be a power of 2. more slabs reduce lock contention, but fragment
    # memory usage.
    infra-cache-slabs: 4

    # the maximum number of hosts that are cached (roundtrip, EDNS, lame).
    # infra-cache-numhosts: 10000

    # minimum wait time for responses, increase if uplink is long. In msec.
    # infra-cache-min-rtt: 50

    # maximum wait time for responses. In msec.
    # infra-cache-max-rtt: 120000

    # the amount of memory to use for the key cache.
    # plain value in bytes or you can append k, m or G. default is "4Mb".
    key-cache-size: 4m

    # the number of slabs to use for the key cache.
    # the number of slabs must be a power of 2.
    # more slabs reduce lock contention, but fragment memory usage.
    key-cache-slabs: 4

    # buffer size for handling DNS data. No messages larger than this
    # size can be sent or received, by UDP or TCP. In bytes.
    # msg-buffer-size: 65552

    # the amount of memory to use for the message cache. unbound recommends setting
    # to half of rrset-cache-size.
    # plain value in bytes or you can append k, m or G. default is "4Mb".
    msg-cache-size: 64m

    # the number of slabs to use for the message cache. the number of slabs must
    # be a power of 2. more slabs reduce lock contention, but fragment memory usage.
    msg-cache-slabs: 4

    # Do no insert authority/additional sections into response messages when
    # those sections are not required. This reduces response size
    # significantly, and may avoid TCP fallback for some responses. This may
    # cause a slight speedup.
    minimal-responses: yes

    # Number  of  bytes size of the aggressive negative cache.
    neg-cache-size: 4M

    # The number of threads to create to serve clients. 1 disables threading.
    num-threads: 2

    # The number of queries that every thread will service simultaneously. If
    # more queries arrive that need servicing, and no queries can be jostled
    # out (see jostle-timeout), then the queries are dropped.
    # This is best set at half the number of the outgoing-range.
    # This Unbound instance was compiled with libevent so it can efficiently
    # use more than 1024 file descriptors.
    num-queries-per-thread: 4096

    # Number of incoming TCP buffers to allocate per thread. Default
    # is 10. If set to 0, or if do-tcp is "no", no  TCP  queries  from
    # clients  are  accepted. For larger installations increasing this
    # value is a good idea.
    incoming-num-tcp: 10

    # Number of slabs in the key cache. Slabs reduce lock contention by
    # threads. Must be set to a power of 2. Setting (close) to the number
    # of cpus is a reasonable guess.
    key-cache-slabs: 4

    # number of ports to allocate per thread, determines the size of the
    # port range that can be open simultaneously.  About double the
    # num-queries-per-thread, or, use as many as the OS will allow you.
    outgoing-range: 8192

    # permit Unbound to use this port number or port range for
    # making outgoing queries, using an outgoing interface.
    # outgoing-port-permit: 32768

    # Maximum UDP response size (not applied to TCP response).
    # Suggested values are 512 to 4096. Default is 1232. 65536 disables it.
    # max-udp-size: 1232

    # if yes, perform prefetching of almost expired message cache entries.
    prefetch: yes

    # if yes, perform key lookups adjacent to normal lookups.
    prefetch-key: yes

    # the amount of memory to use for the RRset cache.
    # plain value in bytes or you can append k, m or G. default is "4Mb".
    rrset-cache-size: 128m

    # the number of slabs to use for the RRset cache. the number of slabs must
    # be a power of 2. more slabs reduce lock contention, but fragment memory usage.
    rrset-cache-slabs: 4

    # Rotates RRSet order in response (the pseudo-random number is taken from
    # the query ID, for speed and thread safety).
    rrset-roundrobin: yes

    # Serve expired responses from cache, with serve-expired-reply-ttl in
    # the response, and then attempt to fetch the data afresh (actual
    # resolution answer ends up in the cache later on).
    serve-expired: yes

    # Limit serving of expired responses to configured seconds after
    # expiration. 0 disables the limit.
    # serve-expired-ttl: 0
    #
    # Set the TTL of expired records to the serve-expired-ttl value after a
    # failed attempt to retrieve the record from upstream. This makes sure
    # that the expired records will be served as long as there are queries
    # for it.
    # serve-expired-ttl-reset: no
    #
    # TTL value to use when replying with expired data.
    # serve-expired-reply-ttl: 30
    #
    # Time in milliseconds before replying to the client with expired data.
    # This essentially enables the serve-stale behavior as specified in
    # RFC 8767 that first tries to resolve before
    # immediately responding with expired data.  0 disables this behavior.
    # A recommended value is 1800.
    # serve-expired-client-timeout: 0

    # Return the original TTL as received from the upstream name server rather
    # than the decrementing TTL as stored in the cache.  Enabling this feature
    # does not impact cache expiry, it only changes the TTL Unbound embeds in
    # responses to queries. Note that enabling this feature implicitly disables
    # enforcement of the configured minimum and maximum TTL.
    # serve-original-ttl: no

    # buffer size for UDP port 53 incoming (SO_RCVBUF socket option).
    # 0 is system default.  Use 4m to catch query spikes for busy servers.
    # so-rcvbuf: 0

    # buffer size for UDP port 53 outgoing (SO_SNDBUF socket option).
    # 0 is system default.  Use 4m to handle spikes on very busy servers.
    # so-sndbuf: 0

    # use SO_REUSEPORT to distribute queries over threads.
    # at extreme load it could be better to turn it off to distribute even.
    so-reuseport: yes

    # max memory to use for stream(tcp and tls) waiting result buffers.
    # stream-wait-size: 4m

remote-control:
    control-enable: no
