---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pihole
  namespace: pihole
  labels:
    app.kubernetes.io/name: pihole
  annotations:
    configmap.reloader.stakater.com/reload: "pihole-optional-config"
    secret.reloader.stakater.com/reload: "pihole-secrets"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: pihole
  template:
    metadata:
      labels:
        app.kubernetes.io/name: pihole
    spec:
      automountServiceAccountToken: false
      containers:
      - name: pihole
        command: [/bin/bash, /scripts/entrypoint.sh]
        env:
        - name: DHCP_ACTIVE
          value: "false"
        - name: DNSMASQ_USER
          value: pihole
        - name: FTLCONF_LOCAL_IPV4
          value: ${pihole_external_ip_address}
        - name: VIRTUAL_HOST
          value: pihole.${domain_name}
        - name: WEBPASSWORD
          valueFrom:
            secretKeyRef:
              key: pihole_password
              name: pihole-secrets
              optional: true
        envFrom:
        - configMapRef:
            name: pihole-optional-config
            optional: true
        image: pihole/pihole:2024.07.0@sha256:0def896a596e8d45780b6359dbf82fc8c75ef05b97e095452e67a0a4ccc95377
        imagePullPolicy: IfNotPresent
        livenessProbe:
          exec:
            command: [/bin/bash, --norc, --noprofile, /scripts/liveness-probe.sh]
          periodSeconds: 15
        ports:
        - name: pihole-web
          containerPort: 80
          protocol: TCP
        - name: pihole-dns-tcp
          containerPort: 53
          protocol: TCP
        - name: pihole-dns-udp
          containerPort: 53
          protocol: UDP
        - name: pihole-dhcp
          containerPort: 67
          protocol: TCP
        readinessProbe:
          exec:
            command: [dig, +short, +norecurse, +retry=0, '@127.0.0.1', pi.hole]
          periodSeconds: 60
        startupProbe:
          exec:
            command: [/bin/bash, --norc, --noprofile, /scripts/liveness-probe.sh]
          failureThreshold: 24
          initialDelaySeconds: 10
          periodSeconds: 5
        securityContext:
          allowPrivilegeEscalation: true
          capabilities:
            add:
            - NET_BIND_SERVICE
            - SYS_NICE
            - CHOWN
            drop:
            - NET_RAW
        volumeMounts:
        - mountPath: /etc/pihole
          name: pihole-data
          subPath: pihole
        - mountPath: /etc/dnsmasq.d
          name: pihole-data
          subPath: dnsmasq.d
        - mountPath: /scripts
          name: pihole-scripts
        - mountPath: /var/log/pihole
          name: pihole-logs
      dnsConfig:
        nameservers:
        - 127.0.0.1
        - ${dns_fallback:=1.1.1.1}
      dnsPolicy: None
      hostname: pihole
      volumes:
      - name: pihole-data
        persistentVolumeClaim:
          claimName: pihole-data
      - name: pihole-scripts
        configMap:
          name: pihole-scripts
      - name: pihole-logs
        # pihole writes logs to multiple different log files:
        #     FTL.log  pihole.log  pihole_updateGravity.log
        # these are not written to stdout, so we are placing them on the host,
        # so that we can configure promtail to collect them.
        hostPath:
          path: /var/log/pihole
          type: DirectoryOrCreate
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            preference:
              matchExpressions:
              - key: node-role.kubernetes.io/control-plane
                operator: In
                values:
                - "true"
      tolerations:
      - key: node-role.kubernetes.io/control-plane
        operator: Exists
