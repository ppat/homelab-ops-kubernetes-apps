---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: unifi-db
  namespace: unifi
  labels:
    app.kubernetes.io/name: unifi-db
    app.kubernetes.io/part-of: unifi
    app.kubernetes.io/component: database
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: unifi-db
      app.kubernetes.io/part-of: unifi
      app.kubernetes.io/component: database
  template:
    metadata:
      labels:
        app.kubernetes.io/name: unifi-db
        app.kubernetes.io/part-of: unifi
        app.kubernetes.io/component: database
    spec:
      automountServiceAccountToken: false
      containers:
      - name: unifi-db
        image: docker.io/mongo:7.0.21@sha256:3d715950d83061ff2fbc910d12d3703212538cacf6b3003e3736fa5c7f51a2e1
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command: [/usr/bin/mongosh, --port, '27017', --eval, "db.adminCommand({'shutdown': 1})"]
        livenessProbe:
          exec:
            command: [/usr/bin/mongosh, --port, '27017', --eval, "db.adminCommand('ping')"]
          periodSeconds: 60
        ports:
        - name: mongodb
          containerPort: 27017
          protocol: TCP
        readinessProbe:
          tcpSocket:
            port: 27017
          periodSeconds: 60
        startupProbe:
          exec:
            command: [/usr/bin/mongosh, --port, '27017', --eval, "db.adminCommand('ping')"]
          failureThreshold: 24
          initialDelaySeconds: 10
          periodSeconds: 5
        volumeMounts:
        - name: mongo-data-volume
          mountPath: /data/db
        - name: init-scripts-volume
          mountPath: /docker-entrypoint-initdb.d/init-mongo.js
          readOnly: true
          subPath: init-mongo.js
      initContainers:
      - name: init-mongodb-init-script
        image: ghcr.io/fluxcd/flux-cli:v2.6.4@sha256:d6734ea180b0f5135e6a343482da1a669c526ef85525da53a6415c6a9f359861
        command:
        - "/bin/sh"
        - "-c"
        - "cat /templates/init-mongo.js | flux envsubst > /docker-entrypoint-initdb.d/init-mongo.js"
        env:
        - name: MONGO_USER
          valueFrom:
            secretKeyRef:
              key: unifi_db_user
              name: unifi-secrets
              optional: false
        - name: MONGO_PASS
          valueFrom:
            secretKeyRef:
              key: unifi_db_password
              name: unifi-secrets
              optional: false
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          runAsNonRoot: true
        volumeMounts:
        - name: script-templates-volume
          mountPath: /templates
        - name: init-scripts-volume
          mountPath: /docker-entrypoint-initdb.d
      volumes:
      - name: mongo-data-volume
        persistentVolumeClaim:
          claimName: unifi-db-data
      - name: script-templates-volume
        configMap:
          name: unifi-db-script-template
      - name: init-scripts-volume
        emptyDir:
          medium: Memory
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            preference:
              matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                - "amd64"
