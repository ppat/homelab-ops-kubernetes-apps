---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: unifi-network-application
  namespace: unifi
  labels:
    app.kubernetes.io/name: unifi-network-application
    app.kubernetes.io/part-of: unifi
    app.kubernetes.io/component: application
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: unifi-network-application
      app.kubernetes.io/part-of: unifi
      app.kubernetes.io/component: application
  template:
    metadata:
      labels:
        app.kubernetes.io/name: unifi-network-application
        app.kubernetes.io/part-of: unifi
        app.kubernetes.io/component: application
    spec:
      automountServiceAccountToken: false
      containers:
      - name: unifi
        env:
        - name: PUID
          value: "5000"
        - name: PGID
          value: "5000"
        - name: TZ
          value: Etc/UTC
        - name: MONGO_USER
          valueFrom:
            secretKeyRef:
              key: unifi_db_user
              name: unifi-secrets
              optional: false
        - name: MONGO_PASS
          valueFrom:
            secretKeyRef:
              key: unifi_db_password
              name: unifi-secrets
              optional: false
        - name: MONGO_HOST
          value: unifi-db.unifi.svc.cluster.local
        - name: MONGO_PORT
          value: "27017"
        - name: MONGO_DBNAME
          value: unifi
        - name: MEM_LIMIT
          value: "1024"
        - name: MEM_STARTUP
          value: "1024"
        - name: MONGO_TLS
          value: ""
        - name: MONGO_AUTHSOURCE
          value: ""
        image: ghcr.io/linuxserver/unifi-network-application:8.6.9@sha256:f8403a6813b9e0e68fcf622a7f00dbdbd772dfd6a11277fedcb54b816e0eb801
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /status
            port: https-gui-api
            scheme: HTTPS
          periodSeconds: 15
        ports:
        - name: dns-tcp
          containerPort: 53
          protocol: TCP
        - name: dns-udp
          containerPort: 53
          protocol: UDP
        - name: ntp
          containerPort: 123
          protocol: UDP
        # used to "Make application discoverable on L2 network" in the UniFi Network settings
        - name: l2-discovery
          containerPort: 1900
          protocol: UDP
        - name: stun
          containerPort: 3478
          protocol: UDP
        - name: remote-syslog
          containerPort: 5514
          protocol: UDP
        - name: speedtest
          containerPort: 6789
          protocol: TCP
        # unifi network devices communicate w/ unifi network controller (device adoption, etc) on this port
        - name: dvc-comms
          containerPort: 8080
          protocol: TCP
        # web ui + api
        - name: https-gui-api
          containerPort: 8443
          protocol: TCP
        # - name: captive-portal-https
        #   containerPort: 8843
        #   protocol: TCP
        # - name: captive-portal-http
        #   containerPort: 8880
        #   protocol: TCP
        - name: dvc-discovery
          containerPort: 10001
          protocol: UDP
        readinessProbe:
          httpGet:
            path: /status
            port: https-gui-api
            scheme: HTTPS
          periodSeconds: 15
        startupProbe:
          httpGet:
            path: /status
            port: https-gui-api
            scheme: HTTPS
          failureThreshold: 24
          initialDelaySeconds: 15
          periodSeconds: 5
        volumeMounts:
        - name: unifi-data
          mountPath: /config/data
        - name: unifi-logs
          mountPath: /config/logs
        - name: unifi-backups
          mountPath: /config/data/firmware
          subPath: firmware
        - name: unifi-backups
          mountPath: /config/data/backup
          subPath: backup
      volumes:
      - name: unifi-data
        persistentVolumeClaim:
          claimName: unifi-data
      - name: unifi-logs
        # unifi writes logs to multiple different log files:
        #     access.log   inform_request.log  server.log   state.log
        #     hotspot.log  migration.log       startup.log  tasks.lo
        # these are not written to stdout, so we are placing them on the host,
        # so that we can configure promtail to collect them.
        hostPath:
          path: /var/log/unifi
          type: DirectoryOrCreate
      - name: unifi-backups
        persistentVolumeClaim:
          claimName: unifi-backups
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            preference:
              matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                - "amd64"
