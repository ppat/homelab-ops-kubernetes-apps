---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: authentik-release
  namespace: authentik
spec:
  chart:
    spec:
      chart: authentik
      interval: 24h0m0s
      reconcileStrategy: ChartVersion
      sourceRef:
        kind: HelmRepository
        name: authentik-repository
        namespace: flux-system
      version: 2025.8.3
  install:
    createNamespace: false
    remediation:
      retries: 3
  interval: 15m0s
  releaseName: authentik
  targetNamespace: authentik
  upgrade:
    cleanupOnFail: true
    remediation:
      ignoreTestFailures: false
      retries: 3
      strategy: rollback

  values:
    global:
      deploymentAnnotations:
        secret.reloader.stakater.com/reload: "authentik-db-app,authentik-credentials,authentik-signing-cert"
      env:
      # --------------------- GENERAL ------------------------
      - name: AUTHENTIK_COOKIE_DOMAIN
        # Have this line up with authentik-signing-cert's dnsNames
        value: ${dns_zone}
      - name: AUTHENTIK_DISABLE_UPDATE_CHECK
        value: "true"
      - name: AUTHENTIK_ERROR_REPORTING__ENABLED
        value: "false"
      - name: AUTHENTIK_SECRET_KEY
        valueFrom:
          secretKeyRef:
            name: authentik-credentials
            key: authentik_secret_key
      # ---------------------- EMAIL -------------------------
      - name: AUTHENTIK_EMAIL__HOST
        value: smtp.${domain_name}
      - name: AUTHENTIK_EMAIL__PORT
        value: "587"
      - name: AUTHENTIK_EMAIL__USE_TLS
        value: "true"
      - name: AUTHENTIK_EMAIL__USERNAME
        valueFrom:
          secretKeyRef:
            name: authentik-credentials
            key: smtp_username
      - name: AUTHENTIK_EMAIL__PASSWORD
        valueFrom:
          secretKeyRef:
            name: authentik-credentials
            key: smtp_password
      - name: AUTHENTIK_EMAIL__FROM
        valueFrom:
          secretKeyRef:
            name: authentik-credentials
            key: smtp_sender
      # --------------------- POSTGRES -----------------------
      - name: AUTHENTIK_POSTGRESQL__HOST
        value: authentik-db-rw.authentik.svc.cluster.local
      - name: AUTHENTIK_POSTGRESQL__PORT
        value: "5432"
      - name: AUTHENTIK_POSTGRESQL__NAME
        value: authentik
      - name: AUTHENTIK_POSTGRESQL__USER
        valueFrom:
          secretKeyRef:
            name: authentik-db-app
            key: username
      - name: AUTHENTIK_POSTGRESQL__PASSWORD
        valueFrom:
          secretKeyRef:
            name: authentik-db-app
            key: password
      # ----------------------- REDIS ------------------------
      - name: AUTHENTIK_REDIS__HOST
        value: authentik-cache.authentik.svc.cluster.local
      - name: AUTHENTIK_REDIS__PORT
        value: "6379"
      - name: AUTHENTIK_REDIS__PASSWORD
        valueFrom:
          secretKeyRef:
            name: authentik-credentials
            key: authentik_redis_password
      # ------------------------- S3 -------------------------
      - name: AUTHENTIK_STORAGE__MEDIA__BACKEND
        value: "s3"
      - name: AUTHENTIK_STORAGE__MEDIA__S3__ENDPOINT
        value: "https://s3.${domain_name}"
      - name: AUTHENTIK_STORAGE__MEDIA__S3__BUCKET_NAME
        value: "homelab-authentik-media"
      - name: AUTHENTIK_STORAGE__MEDIA__S3__ACCESS_KEY
        valueFrom:
          secretKeyRef:
            name: authentik-credentials
            key: media_bucket_accesskey
      - name: AUTHENTIK_STORAGE__MEDIA__S3__SECRET_KEY
        valueFrom:
          secretKeyRef:
            name: authentik-credentials
            key: media_bucket_secretkey
      - name: AUTHENTIK_STORAGE__MEDIA__S3__CUSTOM_DOMAIN
        value: "s3.${domain_name}/homelab-authentik-media"
      # ------------------------------------------------------
      volumeMounts:
      - name: signing-cert
        mountPath: /certs/jwt-signing.key
        subPath: tls.key
        readOnly: true
      - name: signing-cert
        mountPath: /certs/jwt-signing.pem
        subPath: tls.crt
        readOnly: true
      volumes:
      - name: signing-cert
        secret:
          secretName: authentik-signing-cert

    server:
      replicas: 3
      pdb:
        enabled: true
        minAvailable: 1
      resources: {}
      metrics:
        enabled: true
        serviceMonitor:
          enabled: true
      ingress:
        enabled: true
        annotations:
          external-dns.alpha.kubernetes.io/hostname: auth.${domain_name}
          traefik.ingress.kubernetes.io/router.entrypoints: websecure
          traefik.ingress.kubernetes.io/router.tls: "true"
        hosts:
        - auth.${domain_name}
    worker:
      replicas: 1
      pdb:
        enabled: false
      resources: {}

    prometheus:
      rules:
        enabled: true

    postgresql:
      enabled: false

    redis:
      enabled: false

  postRenderers:
  - kustomize:
      patches:
      - target:
          kind: Ingress
          name: authentik-server
        # yamllint disable-line rule:indentation
        patch: |-
          - op: add
            path: /spec/rules/-
            value:
              host: "*.${domain_name}"
              http:
                paths:
                - backend:
                    service:
                      name: ak-outpost-authentik-embedded-outpost
                      port:
                        number: 9000
                  path: /outpost.goauthentik.io/
                  pathType: Prefix
