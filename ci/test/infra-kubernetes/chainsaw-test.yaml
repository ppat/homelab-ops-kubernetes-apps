---
# Main test file for infrastructure kubernetes modules
apiVersion: chainsaw.kyverno.io/v1alpha1
kind: Test
metadata:
  name: infra-kubernetes
spec:
  # bindings:
  # - name: test_path
  #   value: ./ci/test/infra-kubernetes
  steps:
  - name: Bootstrap FluxCD
    use:
      template: ../chainsaw/steps/bootstrap-flux.yaml
      with:
        bindings:
        - name: test_path
          value: ./ci/test/infra-kubernetes

  # Step 2: Core Module
  - try:
    - description: Reconcile infra-kubernetes-core
      script:
        content: ../chainsaw/scripts/flux-reconcile.sh --resource-type=kustomization  --resource-name=infra-kubernetes-core --timeout=3m
    # Wait for CoreDNS
    - wait:
        apiVersion: apps/v1
        kind: Deployment
        name: ($values.resources.coredns.deployment)
        namespace: ($values.namespaces.core)
        timeout: 1m
        for:
          condition:
            name: Available
            value: "true"
    finally:
    # Debug core issues if failed
    - describe:
        apiVersion: apps/v1
        kind: Deployment
        name: ($values.resources.coredns.deployment)
        namespace: ($values.namespaces.core)
    - podLogs:
        name: ($values.resources.coredns.deployment)
        namespace: ($values.namespaces.core)

  # Step 3: Extra Module
  - try:
    - description: Reconcile infra-kubernetes-extra
      script:
        content: ../chainsaw/scripts/flux-reconcile.sh --resource-type=kustomization  --resource-name=infra-kubernetes-extra --timeout=3m
    # Wait for NFD components
    - wait:
        apiVersion: apps/v1
        kind: Deployment
        name: ($values.resources.nfd.master)
        namespace: ($values.namespaces.core)
        timeout: 1m
        for:
          condition:
            name: Available
            value: "true"
    - assert:
        bindings:
          - name: name
            value: ($values.resources.nfd.worker)
          - name: namespace
            value: ($values.namespaces.core)
        file: ../chainsaw/templates/rollouts/daemonset.yaml
    - wait:
        apiVersion: apps/v1
        kind: Deployment
        name: ($values.resources.nfd.gc)
        namespace: ($values.namespaces.core)
        timeout: 1m
        for:
          condition:
            name: Available
            value: "true"
    # Wait for VPA
    - wait:
        apiVersion: apps/v1
        kind: Deployment
        name: ($values.resources.vpa.recommender)
        namespace: ($values.namespaces.core)
        timeout: 1m
        for:
          condition:
            name: Available
            value: "true"
    # Wait for Device Plugins
    - wait:
        apiVersion: apps/v1
        kind: Deployment
        name: ($values.resources.plugins.operator)
        namespace: ($values.namespaces.intel)
        timeout: 1m
        for:
          condition:
            name: Available
            value: "true"
    - wait:
        apiVersion: apps/v1
        kind: Deployment
        name: ($values.resources.plugins.gpu)
        namespace: ($values.namespaces.intel)
        timeout: 1m
        for:
          condition:
            name: Available
            value: "true"
    - assert:
        bindings:
          - name: name
            value: ($values.resources.plugins.generic)
          - name: namespace
            value: ($values.namespaces.core)
        file: ../chainsaw/templates/rollouts/daemonset.yaml
    # Wait for Descheduler
    - wait:
        apiVersion: apps/v1
        kind: Deployment
        name: ($values.resources.descheduler.deployment)
        namespace: ($values.namespaces.core)
        timeout: 1m
        for:
          condition:
            name: Available
            value: "true"
    finally:
    # Debug extra issues if failed
    - describe:
        apiVersion: apps/v1
        kind: DaemonSet
        name: ($values.resources.nfd.worker)
        namespace: ($values.namespaces.core)
    - podLogs:
        name: ($values.resources.nfd.worker)
        namespace: ($values.namespaces.core)
    # Clean up git source
    - delete:
        ref:
          apiVersion: source.toolkit.fluxcd.io/v1
          kind: GitRepository
          name: test-source
          namespace: ($values.namespaces.flux)
