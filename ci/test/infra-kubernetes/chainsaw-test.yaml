---
# Main test file for infrastructure kubernetes modules
apiVersion: chainsaw.kyverno.io/v1alpha1
kind: Test
metadata:
  name: infra-kubernetes
spec:
  # bindings:
  # - name: test_path
  #   value: ./ci/test/infra-kubernetes
  steps:
  - name: Bootstrap FluxCD
    use:
      template: ../chainsaw/steps/bootstrap-flux.yaml
      with:
        bindings:
        - name: test_path
          value: ./ci/test/infra-kubernetes
    # try:
    # - description: Create git source
    #   apply:
    #     resource:
    #       apiVersion: source.toolkit.fluxcd.io/v1
    #       kind: GitRepository
    #       metadata:
    #         name: test-source
    #         namespace: flux-system
    #       spec:
    #         interval: 1m0s
    #         ref:
    #           branch: ($values.git.branch)
    #         url: ($values.git.url)
    # - description: Wait for git source
    #   wait:
    #     apiVersion: source.toolkit.fluxcd.io/v1
    #     kind: GitRepository
    #     name: test-source
    #     namespace: flux-system
    #     timeout: 1m
    #     for:
    #       condition:
    #         name: Ready
    #         value: 'true'
    # - description: Create pre-requisites kustomization
    #   apply:
    #     resource:
    #       apiVersion: kustomize.toolkit.fluxcd.io/v1
    #       kind: Kustomization
    #       metadata:
    #         name: pre-requisites
    #         namespace: flux-system
    #       spec:
    #         interval: 1m0s
    #         path: ./ci/test/pre-requisites
    #         prune: false
    #         sourceRef:
    #           kind: GitRepository
    #           name: test-source
    # - description: Wait for pre-requisites
    #   wait:
    #     apiVersion: kustomize.toolkit.fluxcd.io/v1
    #     kind: Kustomization
    #     name: pre-requisites
    #     namespace: flux-system
    #     timeout: 1m
    #     for:
    #       condition:
    #         name: Ready
    #         value: 'true'
    # - description: Create test kustomization
    #   apply:
    #     resource:
    #       apiVersion: kustomize.toolkit.fluxcd.io/v1
    #       kind: Kustomization
    #       metadata:
    #         name: test-kustomization
    #         namespace: flux-system
    #       spec:
    #         interval: 1m0s
    #         path: ($test_path)
    #         prune: false
    #         sourceRef:
    #           kind: GitRepository
    #           name: test-source
    # - description: Wait for test kustomization
    #   wait:
    #     apiVersion: kustomize.toolkit.fluxcd.io/v1
    #     kind: Kustomization
    #     name: test-kustomization
    #     namespace: flux-system
    #     timeout: 1m
    #     for:
    #       condition:
    #         name: Ready
    #         value: 'true'
    # catch:
    # - describe:
    #     apiVersion: source.toolkit.fluxcd.io/v1
    #     kind: GitRepository
    #     name: test-source
    #     namespace: flux-system
    # - describe:
    #     apiVersion: kustomize.toolkit.fluxcd.io/v1
    #     kind: Kustomization
    #     name: pre-requisites
    #     namespace: flux-system
    # - describe:
    #     apiVersion: kustomize.toolkit.fluxcd.io/v1
    #     kind: Kustomization
    #     name: test-kustomization
    #     namespace: flux-system

  # Step 2: Core Module
  - try:
    # Reconcile core module
    - command:
        entrypoint: flux
        args:
        - reconcile
        - kustomization
        - -n
        - flux-system
        - ($values.modules.core.name)
        - --timeout
        - ($values.modules.core.timeout)
    # Wait for CoreDNS
    - wait:
        apiVersion: apps/v1
        kind: Deployment
        name: ($values.resources.coredns.deployment)
        namespace: ($values.namespaces.core)
        timeout: 1m
        for:
          condition:
            name: Available
            value: "true"
    finally:
    # Debug core issues if failed
    - describe:
        apiVersion: apps/v1
        kind: Deployment
        name: ($values.resources.coredns.deployment)
        namespace: ($values.namespaces.core)
    - podLogs:
        name: ($values.resources.coredns.deployment)
        namespace: ($values.namespaces.core)

  # Step 3: Extra Module
  - try:
    # Reconcile extra module
    - command:
        entrypoint: flux
        args:
        - reconcile
        - kustomization
        - -n
        - ($values.namespaces.flux)
        - ($values.modules.extra.name)
        - --timeout
        - ($values.modules.extra.timeout)
    # Wait for NFD components
    - wait:
        apiVersion: apps/v1
        kind: Deployment
        name: ($values.resources.nfd.master)
        namespace: ($values.namespaces.core)
        timeout: 1m
        for:
          condition:
            name: Available
            value: "true"
    - assert:
        bindings:
          - name: name
            value: ($values.resources.nfd.worker)
          - name: namespace
            value: ($values.namespaces.core)
        file: ../chainsaw/templates/rollouts/daemonset.yaml
    - wait:
        apiVersion: apps/v1
        kind: Deployment
        name: ($values.resources.nfd.gc)
        namespace: ($values.namespaces.core)
        timeout: 1m
        for:
          condition:
            name: Available
            value: "true"
    # Wait for VPA
    - wait:
        apiVersion: apps/v1
        kind: Deployment
        name: ($values.resources.vpa.recommender)
        namespace: ($values.namespaces.core)
        timeout: 1m
        for:
          condition:
            name: Available
            value: "true"
    # Wait for Device Plugins
    - wait:
        apiVersion: apps/v1
        kind: Deployment
        name: ($values.resources.plugins.operator)
        namespace: ($values.namespaces.intel)
        timeout: 1m
        for:
          condition:
            name: Available
            value: "true"
    - wait:
        apiVersion: apps/v1
        kind: Deployment
        name: ($values.resources.plugins.gpu)
        namespace: ($values.namespaces.intel)
        timeout: 1m
        for:
          condition:
            name: Available
            value: "true"
    - assert:
        bindings:
          - name: name
            value: ($values.resources.plugins.generic)
          - name: namespace
            value: ($values.namespaces.core)
        file: ../chainsaw/templates/rollouts/daemonset.yaml
    # Wait for Descheduler
    - wait:
        apiVersion: apps/v1
        kind: Deployment
        name: ($values.resources.descheduler.deployment)
        namespace: ($values.namespaces.core)
        timeout: 1m
        for:
          condition:
            name: Available
            value: "true"
    finally:
    # Debug extra issues if failed
    - describe:
        apiVersion: apps/v1
        kind: DaemonSet
        name: ($values.resources.nfd.worker)
        namespace: ($values.namespaces.core)
    - podLogs:
        name: ($values.resources.nfd.worker)
        namespace: ($values.namespaces.core)
    # Clean up git source
    - delete:
        ref:
          apiVersion: source.toolkit.fluxcd.io/v1
          kind: GitRepository
          name: test-source
          namespace: ($values.namespaces.flux)
